% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/party.R
\name{cond_inference_forest}
\alias{cond_inference_forest}
\title{A wrapper function for conditional inference forests}
\usage{
cond_inference_forest(
  formula,
  data,
  minsplit = 20L,
  maxdepth = 0L,
  teststat = "quad",
  testtype = "Univariate",
  mincriterion = 0,
  replace = FALSE,
  fraction = 0.632,
  mtry = 5L,
  ntree = 500L,
  ...
)
}
\arguments{
\item{formula}{a symbolic description of the model to be fit. Note that
symbols like \code{:} and \code{-} will not work and the tree will make use
of all variables listed on the right-hand side of \code{formula}.}

\item{data}{a data frame containing the variables in the model.}

\item{minsplit}{the minimum sum of weights in a node in order to be
considered for splitting.}

\item{maxdepth}{maximum depth of the tree. The default \code{maxdepth = 0}
means that no restrictions are applied to tree sizes.}

\item{teststat}{a character specifying the type of the test statistic to be
applied.}

\item{testtype}{a character specifying how to compute the distribution of
the test statistic.}

\item{mincriterion}{the value of the test statistic (for \code{testtype ==
"Teststatistic"}), or 1 - p-value (for other values of \code{testtype}) that
must be exceeded in order to implement a split.}

\item{replace}{a logical indicating whether sampling of observations is done
with or without replacement.}

\item{fraction}{fraction of number of observations to draw without
replacement (only relevant if \code{replace = FALSE}).}

\item{mtry}{number of input variables randomly sampled as candidates at each
node for random forest like algorithms. The default \code{mtry = 0} means
that no random selection takes place.}

\item{ntree}{number of trees to grow in a forest.}

\item{...}{Other options to pass to \code{\link[party:cforest]{party::cforest()}}.}
}
\value{
An object of class \code{RandomForest-class}.
}
\description{
This function is a slightly different API for \code{\link[party:cforest]{party::cforest()}} that has
several important arguments as top-level arguments (as opposed to being
specified in \code{\link[party:cforest_control]{party::cforest_control()}}).
}
\details{
Note that, although \code{\link[party:cforest_control]{party::cforest_unbiased()}} is not directly used, the
defaults for \code{cond_inference_forest()} mirror its default values. However,
\code{\link[party:cforest_control]{party::cforest_unbiased()}} does not allow several tuning parameters to be
optimized (\code{teststat}, \code{testtype}, \code{mincriterion}, \code{replace}, and \code{fraction}).
If you set pass a \code{\link[party:cforest_control]{party::cforest_unbiased()}} object to
\code{cond_inference_forest()} and modify those arguments, their values will be
overwritten.
}
